@page
@model ExchangeProgram.Pages.OrganizerDashboardModel
@using Microsoft.AspNetCore.Mvc.RazorPages
@{
	Layout = null;
	if (string.IsNullOrEmpty(TempData["ActiveTab"]?.ToString()))
	{
		TempData["ActiveTab"] = "students"; // Standard-Tab
	}
}

<!DOCTYPE html>
<html>
<head>
	<title>Organizer Dashboard</title>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
	<style>
		.details-row {
			background-color: #f9f9f9;
		}

		.details-container {
			padding: 10px;
		}

		.d-none {
			display: none;
		}

		#notification {
			position: fixed;
			top: 20%;
			left: 50%;
			transform: translate(-50%, -50%);
			min-width: 300px;
			max-width: 500px;
			padding: 15px;
			/* font-size: 1rem;
							font-weight: bold; */
			text-align: center;
			z-index: 1050;
			border-radius: 8px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			opacity: 0;
			transition: opacity 0.3s ease, transform 0.3s ease;
		}

			#notification.show {
				opacity: 1;
				transform: translate(-50%, -20%);
			}
	</style>
</head>
<body>
	<!-- Navigation -->
	<nav class="navbar navbar-expand-lg" style="background-color: rgb(3, 77, 148);">
		<div class="container-fluid">
			<a class="navbar-brand text-white" href="#">
				@* Uni Logo *@
				@* <img src="/pictures/Uni-duisburg-essen-logo.jpg" alt="GESCO Logo" height="30" class="d-inline-block align-text-top"> *@
				GESCO
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon" style="filter: invert(1);"></span> <!-- Toggler-Icon invertieren, damit es sichtbar bleibt -->
			</button>
			<div class="collapse navbar-collapse" id="navbarNav">
				<ul class="navbar-nav ms-auto">
					<li class="nav-item">
						<a asp-page="/Index" asp-route-id="@Request.Query["id"]" class="nav-link text-white">Home</a>
					</li>
					<li class="nav-item">
						<a asp-page="/FAQ" asp-route-id="@Request.Query["id"]" class="nav-link text-white">FAQ</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-white" href="https://www.uni-due.de/">About Us</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-white btn btn-outline-danger btn-sm" href="/Logout">Logout</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>

	@if (TempData["SuccessMessage"] != null)
	{
		<script>
			window.onload = function () {
				showNotification('@TempData["SuccessMessage"]', 'success');
			};
		</script>
	}

	@if (TempData["ErrorMessage"] != null)
	{
		<script>
			window.onload = function () {
				showNotification('@TempData["ErrorMessage"]', 'danger');
			};
		</script>
	}

	<div id="notification" class="alert alert-success" style="display: none; position: fixed; top: 20px; right: 20px; z-index: 1050;">
		<span id="notificationMessage"></span>
	</div>

	<!-- Content -->
	<div class="container mt-4">
		<h2>Manage Students and Your Account</h2>
		<p>Use the tabs below to manage your account and oversee student information.</p>

		<div class="row">
			<!-- Left Sidebar -->
			<div class="col-md-3">
				<div class="list-group">
					<a href="#students"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "students" ? "active" : "")"
					   data-bs-toggle="tab" >Manage Students</a>
					<a href="#programs"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "programs" ? "active" : "")"
					   data-bs-toggle="tab" >Manage Programs</a>
					<a href="#email"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "email" ? "active" : "")"
					   data-bs-toggle="tab" >Change Email</a>
					<a href="#password"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "password" ? "active" : "")"
					   data-bs-toggle="tab" >Change Password</a>
				</div>
			</div>

			<!-- Right Content -->
			<div class="col-md-9">
				<div class="tab-content">
					<!-- Manage Students Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "students" ? "show active" : "")" id="students">
						<h3>Manage Applications</h3>
						<p>Click on a student to view detailed information and manage their application.</p>

						<!-- Filter and Sort Options -->
						<div class="mb-3">
							<button class="btn btn-primary btn-sm" onclick="generateApplicantsReport()">Generate Applicants Report</button>
							<button class="btn btn-secondary btn-sm" onclick="generateApplicationsReport()">Generate Applications Report</button>
						</div>

						<!-- Students Table -->
						<table class="table table-bordered">
							<thead>
								<tr>
									<th>First Name</th>
									<th>Last Name</th>
									<th>Email</th>
									<th>Matriculation Number</th>
									<th>Status</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var student in Model.Students)
								{
									<tr>
										<td>@student.FirstName</td>
										<td>@student.LastName</td>
										<td>@student.Email</td>
										@* <td>@student.MatriculationNumber</td> *@
										<td>Pending</td>
										<td>
											<button class="btn btn-primary btn-sm" onclick="toggleDetails(this)">View More</button>
										</td>
									</tr>
									<tr class="details-row d-none">
										<td colspan="6">
											<div class="details-container">
												<strong>Details:</strong><br />
												@* <img src="data:image/png;base64,@Convert.ToBase64String(student.ProfilePicture ?? new byte[0])" alt="Profile Picture" class="img-thumbnail" style="width: 150px; height: 150px;" /><br />
												<strong>Birth Date:</strong> @student.BirthDate <br />
												<strong>Address:</strong> @student.Address, @student.City <br />
												<strong>Country:</strong> @student.Country <br />
												<strong>Phone Number:</strong> @student.PhoneNumber <br />
												<strong>Documents:</strong> *@
												<ul>
													@foreach (var doc in student.Documents)
													{
														<li>
															@doc.FileName
															<a href="@Url.Page("/DownloadDocument", new { documentId = doc.Id })" class="btn btn-sm btn-link">Download</a>
														</li>
													}
												</ul>
												<button class="btn btn-success btn-sm" onclick="approveStudent(@student.Id)">Approve</button>
												<button class="btn btn-danger btn-sm" onclick="rejectStudent(@student.Id)">Reject</button>
												<textarea id="rejectReason-@student.Id" class="form-control mt-2" placeholder="Enter rejection reason"></textarea>
											</div>
										</td>
									</tr>
								}
							</tbody>
						</table>

					</div>

					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "programs" ? "show active" : "")" id="programs">
						<h3>Manage Exchange Programs</h3>
						<p>Create and manage exchange programs below.</p>

						@if(Model.Programs.Count > 0) {
							<!-- Display Existing Programs -->
							<h4>Existing Programs</h4>
							<table class="table table-bordered">
								<thead>
									<tr>
										<th>Name</th>
										<th>Description</th>
										<th>Deadline</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var program in Model.Programs)
									{
										<tr>
											<td>@program.Name</td>
											<td>@program.Description</td>
											<td>@(program.Deadline?.ToString("dd.MM.yyyy") ?? "No deadline available")</td>
											<td>
												<form method="post" asp-page-handler="DeleteProgram" class="d-inline">
													<input type="hidden" name="programId" value="@program.Id" />
													<button type="submit" class="btn btn-danger btn-sm">Delete</button>
												</form>
											</td>
										</tr>
									}
								</tbody>
							</table>
						}

						<!-- Create New Program -->
						<h4>Create New Program</h4>
						<form method="post" asp-page-handler="CreateProgram">
							<div class="mb-3">
								<label for="ProgramName" class="form-label">Program Name</label>
								<input type="text" class="form-control" id="ProgramName" name="ProgramName" required />
							</div>
							<div class="mb-3">
								<label for="ProgramDescription" class="form-label">Program Description</label>
								<textarea class="form-control" id="ProgramDescription" name="ProgramDescription" rows="3" required></textarea>
							</div>
							<div class="mb-3">
								<label for="ProgramDeadline" class="form-label">Application Deadline</label>
								<input type="date" class="form-control" id="ProgramDeadline" name="ProgramDeadline" required />
							</div>
							<button type="submit" class="btn btn-primary">Create Program</button>
						</form>
					</div>


					<!-- Email Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "email" ? "show active" : "")" id="email">
						<h3>Change Email</h3>
						<form method="post" asp-page-handler="ChangeEmail">
							<div class="mb-3">
								<label for="CurrentEmail" class="form-label">Current Email</label>
								<input type="email" class="form-control" id="CurrentEmail" name="CurrentEmail" required />
							</div>
							<div class="mb-3">
								<label for="NewEmail" class="form-label">New Email</label>
								<input type="email" class="form-control" id="NewEmail" name="NewEmail" required />
							</div>
							<div class="mb-3">
								<label for="ConfirmEmail" class="form-label">Confirm New Email</label>
								<input type="email" class="form-control" id="ConfirmEmail" name="ConfirmEmail" required />
							</div>
							<button type="submit" class="btn btn-primary">Update Email</button>
						</form>
					</div>

					<!-- Password Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "password" ? "show active" : "")" id="password">
						<h3>Change Password</h3>
						<form method="post" asp-page-handler="ChangePassword">
							<div class="mb-3">
								<label for="OldPassword" class="form-label">Old Password</label>
								<input type="password" class="form-control" id="OldPassword" name="OldPassword" required />
							</div>
							<div class="mb-3">
								<label for="NewPassword" class="form-label">New Password</label>
								<input type="password" class="form-control" id="NewPassword" name="NewPassword" required />
							</div>
							<div class="mb-3">
								<label for="ConfirmPassword" class="form-label">Confirm New Password</label>
								<input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" required />
							</div>
							<button type="submit" class="btn btn-primary">Update Password</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>
		// function clearMessages() {
		// 	const alerts = document.querySelectorAll('.alert');
		// 	alerts.forEach(alert => alert.remove());
		// }

		function showNotification(message, type) {
			const notification = document.getElementById('notification');
			const messageSpan = document.getElementById('notificationMessage');

			// Entferne vorherige Klassen und füge neue hinzu
			notification.className = `alert alert-${type}`;
			messageSpan.textContent = message;

			// Zeige die Benachrichtigung
			notification.style.display = 'block';
			setTimeout(() => {
				notification.classList.add('show');
			}, 10);

			// Verstecke die Benachrichtigung nach 5 Sekunden
			setTimeout(() => {
				notification.classList.remove('show');
				setTimeout(() => {
					notification.style.display = 'none';
				}, 300); // Gleiche Zeit wie die CSS-Transition
			}, 3000);
		}

		// Trigger für Erfolg oder Fehler
		window.onload = function () {
				const successMessage = '@TempData["SuccessMessage"]';
				const errorMessage = '@TempData["ErrorMessage"]';

				if (successMessage) {
					showNotification(successMessage, 'success');
				}
				if (errorMessage) {
					showNotification(errorMessage, 'danger');
				}
		};

		function toggleDetails(button) {
			const detailsRow = button.closest('tr').nextElementSibling;
			if (detailsRow.classList.contains('d-none')) {
				detailsRow.classList.remove('d-none');
				button.textContent = 'View Less';
			} else {
				detailsRow.classList.add('d-none');
				button.textContent = 'View More';
			}
		}

		// Placeholder for Approve Student
		function approveStudent(studentId) {
			alert(`Student ${studentId} approved.`);
		}

		// Placeholder for Reject Student
		function rejectStudent(studentId) {
			const reason = document.getElementById(`rejectReason-${studentId}`).value;
			if (!reason.trim()) {
				alert("Please provide a rejection reason.");
				return;
			}
			alert(`Student ${studentId} rejected with reason: ${reason}`);
		}

		// Placeholder for Generating Reports
		function generateApplicantsReport() {
			alert("Generating applicants report...");
		}

		function generateApplicationsReport() {
			alert("Generating applications report...");
		}
	</script>
</body>
</html>
