@page
@model ExchangeProgram.Pages.OrganizerDashboardModel
@using Microsoft.AspNetCore.Mvc.RazorPages
@{
	Layout = null;
	if (string.IsNullOrEmpty(TempData["ActiveTab"]?.ToString()))
	{
		TempData["ActiveTab"] = "students"; // Standard-Tab
	}
}

<!DOCTYPE html>
<html>
<head>
	<title>Organizer Dashboard</title>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

	<style>
		.details-row {
			background-color: #f9f9f9;
		}

		.details-container {
			padding: 10px;
		}

		.d-none {
			display: none;
		}

		#notification {
			position: fixed;
			top: 20%;
			left: 50%;
			transform: translate(-50%, -50%);
			min-width: 300px;
			max-width: 500px;
			padding: 15px;
			/* font-size: 1rem;
																					font-weight: bold; */
			text-align: center;
			z-index: 1050;
			border-radius: 8px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			opacity: 0;
			transition: opacity 0.3s ease, transform 0.3s ease;
		}

			#notification.show {
				opacity: 1;
				transform: translate(-50%, -20%);
			}
	</style>
</head>
<body>
	<!-- Navigation -->
	<nav class="navbar navbar-expand-lg" style="background-color: rgb(3, 77, 148);">
		<div class="container-fluid">
			<a class="navbar-brand text-white" href="#">
				@* Uni Logo *@
				@* <img src="/pictures/Uni-duisburg-essen-logo.jpg" alt="GESCO Logo" height="30" class="d-inline-block align-text-top"> *@
				GESCO
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon" style="filter: invert(1);"></span> <!-- Toggler-Icon invertieren, damit es sichtbar bleibt -->
			</button>
			<div class="collapse navbar-collapse" id="navbarNav">
				<ul class="navbar-nav ms-auto">
					<li class="nav-item">
						<a asp-page="/Index" asp-route-id="@Request.Query["id"]" class="nav-link text-white">Home</a>
					</li>
					<li class="nav-item">
						<a asp-page="/FAQ" asp-route-id="@Request.Query["id"]" class="nav-link text-white">FAQ</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-white" href="https://www.uni-due.de/">About Us</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-white btn btn-outline-danger btn-sm" href="/Logout">Logout</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>

	@if (TempData["SuccessMessage"] != null)
	{
		<script>
			window.onload = function () {
				showNotification('@TempData["SuccessMessage"]', 'success');
			};
		</script>
	}

	@if (TempData["ErrorMessage"] != null)
	{
		<script>
			window.onload = function () {
				showNotification('@TempData["ErrorMessage"]', 'danger');
			};
		</script>
	}

	<div id="notification" class="alert alert-success" style="display: none; position: fixed; top: 20px; right: 20px; z-index: 1050;">
		<span id="notificationMessage"></span>
	</div>

	<!-- Content -->
	<div class="container mt-4">
		<h2>Manage Students and Your Account</h2>
		<p>Use the tabs below to manage your account and oversee student information.</p>

		<div class="row">
			<!-- Left Sidebar -->
			<div class="col-md-3">
				<div class="list-group">
					<a href="#students"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "students" ? "active" : "")"
					   data-bs-toggle="tab">Manage Students</a>
					<a href="#programs"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "programs" ? "active" : "")"
					   data-bs-toggle="tab">Manage Programs</a>
					<a href="#email"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "email" ? "active" : "")"
					   data-bs-toggle="tab">Change Email</a>
					<a href="#password"
					   class="list-group-item list-group-item-action @(TempData["ActiveTab"]?.ToString() == "password" ? "active" : "")"
					   data-bs-toggle="tab">Change Password</a>
				</div>
			</div>

			<!-- Right Content -->
			<div class="col-md-9">
				<div class="tab-content">
					<!-- Organizator Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "students" ? "show active" : "")" id="students">
						<h3>Manage Applications</h3>
						<p>View, sort and manage student applications. Select a report type and generate a downloadable report.</p>

						<!-- Reports und Sortierung -->
						<div class="d-flex justify-content-between flex-wrap mb-4">
							<div class="d-flex flex-column">
								<div class="mb-3">
									<label for="reportType" class="fw-bold">Generate Report:</label>
									<div class="d-flex align-items-center mt-2">
										<select id="reportType" class="form-select w-auto">
											<option value="applicants">Applicants for Selection Procedure</option>
											<option value="applicationsByYear">Applications by Year</option>
											<option value="applicationsByHost">Applications by Host University</option>
										</select>
										<button class="btn btn-primary ms-3" onclick="generateReport()">Generate</button>
									</div>
								</div>
								<div>
									<label for="sortCriteria" class="fw-bold">Sort By:</label>
									<div class="d-flex align-items-center mt-2">
										<select id="sortCriteria" class="form-select w-auto" onchange="sortTable()">
											<option value="name-asc">Name (A-Z)</option>
											<option value="name-desc">Name (Z-A)</option>
											<option value="program-asc">Program Name (A-Z)</option>
											<option value="program-desc">Program Name (Z-A)</option>
											<option value="status-asc">Status (Approved First)</option>
											<option value="status-desc">Status (Rejected First)</option>
											<option value="date-asc">Application Date (Oldest First)</option>
											<option value="date-desc">Application Date (Newest First)</option>
										</select>
										<div class="d-flex ms-4">
											<button type="submit" class="btn btn-success px-4 me-2" formaction="?handler=ApproveSelected" form="applicationsForm">
												Approve Selected
											</button>
											<button type="button" class="btn btn-danger px-4" onclick="showRejectReasonModal()">Reject Selected</button>
										</div>
									</div>
								</div>
							</div>
						</div>

						<!-- Applications Table -->
						<div class="table-container">
							<form method="post" asp-page="OrganizerDashboard" id="applicationsForm">
								<table class="table table-bordered table-striped">
									<thead>
										<tr>
											<th><input type="checkbox" id="selectAll"></th>
											<th>Name</th>
											<th>Program</th>
											<th>Status</th>
											<th>Application Date</th>
											<th>Documents</th>
											<th>Actions</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var application in Model.Applications)
										{
											<tr>
												<td>
													<input type="checkbox" name="selectedApplicationIds" value="@application.Id" class="select-app" />
												</td>
												<td data-column="name">@application.FirstName @application.LastName</td>
												<td data-column="program">@application.Program.Name</td>
												<td data-column="status">
													@if (application.Status.Contains("Approved"))
													{
														<p class="text-success">@application.Status</p>
													}
													else if (application.Status.Contains("Rejected"))
													{
														<p class="text-danger">@application.Status</p>
													}
													else
													{
														<p>@application.Status</p>
													}
												</td>
												<td data-column="date">@application.ApplicationDate</td>
												<td>
													<!-- Dokumenten-Links -->
													<ul class="list-unstyled mb-0">
														@foreach (var document in application.Documents)
														{
															<li>
																<a asp-page="OrganizerDashboard" asp-route-handler="DownloadDocument" asp-route-documentId="@document.Id">
																	@document.FileName (@document.FileType)
																</a>
															</li>
														}
													</ul>
												</td>
												<td>
													<button type="button" class="btn btn-info btn-sm" onclick="event.preventDefault(); showApplicationDetails(@application.Id)">View Details</button>
												</td>
											</tr>
										}
									</tbody>
								</table>
							</form>
						</div>

						<!-- Modal for Application Details -->
						<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
							<div class="modal-dialog modal-lg">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="detailsModalLabel">Application Details</h5>
										<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
									</div>
									<div class="modal-body">
										<div id="detailsContent">Loading...</div>
									</div>
									<div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
									</div>
								</div>
							</div>
						</div>

						<!-- Reject Reason Modal -->
						<div class="modal fade" id="rejectReasonModal" tabindex="-1" aria-labelledby="rejectReasonModalLabel" aria-hidden="true">
							<div class="modal-dialog">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="rejectReasonModalLabel">Reject Applications</h5>
										<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
									</div>
									<form method="post" asp-page="OrganizerDashboard" id="rejectForm">
										<div class="modal-body">
											<input type="hidden" id="rejectApplicationIds" name="selectedApplicationIds" />
											<div class="mb-3">
												<label for="rejectReason" class="form-label">Reason for Rejection</label>
												<textarea class="form-control" id="rejectReason" name="rejectReason" rows="3" required></textarea>
											</div>
										</div>
										<div class="modal-footer">
											<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
											<button type="submit" class="btn btn-danger" formaction="?handler=RejectSelected">Reject</button>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>

					<!-- Program Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "programs" ? "show active" : "")" id="programs">
						
						<!-- Create New Program -->
						<div class="card mb-4 shadow-sm">
							<div class="card-header bg-primary text-white">
								<h4 class="mb-0">Create New Program</h4>
							</div>
							<div class="card-body">
								<form method="post" asp-page-handler="CreateProgram">
									<div class="mb-3">
										<label for="ProgramName" class="form-label fw-bold">Program Name</label>
										<input type="text" class="form-control" id="ProgramName" name="ProgramName" required />
									</div>
									<div class="mb-3">
										<label for="ProgramHostUniversityName" class="form-label fw-bold">Host University Name</label>
										<input type="text" class="form-control" id="ProgramHostUniversityName" name="ProgramHostUniversityName" required />
									</div>
									<div class="mb-3">
										<label for="ProgramSemesterStart" class="form-label fw-bold">Semester Start</label>
										<input type="date" class="form-control" id="ProgramSemesterStart" name="ProgramSemesterStart" />
									</div>
									<div class="mb-3">
										<label for="ProgramCourseOfStudy" class="form-label fw-bold">Course of Study</label>
										<input type="text" class="form-control" id="ProgramCourseOfStudy" name="ProgramCourseOfStudy" required />
									</div>
									<div class="mb-3">
										<label for="ProgramDescription" class="form-label fw-bold">Program Description</label>
										<textarea class="form-control" id="ProgramDescription" name="ProgramDescription" rows="3" required></textarea>
									</div>
									<div class="mb-3">
										<label for="ProgramDeadline" class="form-label fw-bold">Application Deadline</label>
										<input type="date" class="form-control" id="ProgramDeadline" name="ProgramDeadline" required />
									</div>
									<button type="submit" class="btn btn-primary px-4">Create Program</button>
								</form>
							</div>
						</div>

						@if (Model.Programs.Count > 0)
						{
							<!-- Display Existing Programs -->
							<div class="card shadow-sm">
								<div class="card-header bg-secondary text-white">
									<h4 class="mb-0">Existing Programs</h4>
								</div>
								<div class="card-body">
									<form method="post" asp-page-handler="DeletePrograms" id="programsForm">
										<div class="d-flex justify-content-end mb-3">
											<button type="submit" class="btn btn-danger px-4" formaction="?handler=DeletePrograms">Delete Selected</button>
										</div>
										<table class="table table-bordered table-striped align-middle">
											<thead class="table-dark">
												<tr>
													<th><input type="checkbox" id="selectAllPrograms" /></th>
													<th>Name</th>
													<th>Host University</th>
													<th>Semester Start</th>
													<th>Course of Study</th>
													<th>Description</th>
													<th>Deadline</th>
												</tr>
											</thead>
											<tbody>
												@foreach (var program in Model.Programs)
												{
													<tr>
														<td>
															<input type="checkbox" name="selectedProgramIds" value="@program.Id" class="select-program" />
														</td>
														<td>@program.Name</td>
														<td>@program.HostUniversityName</td>
														<td>@(program.SemesterStart?.ToString("dd.MM.yyyy") ?? "Not set")</td>
														<td>@program.CourseOfStudy</td>
														<td>@program.Description</td>
														<td>@(program.Deadline?.ToString("dd.MM.yyyy") ?? "No deadline available")</td>
													</tr>
												}
											</tbody>
										</table>
									</form>
								</div>
							</div>
						}
					</div>

					<!-- Email Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "email" ? "show active" : "")" id="email">
						<h3>Change Email</h3>
						<form method="post" asp-page-handler="ChangeEmail" style="max-width: 500px;">
							<div class="mb-3">
								<label for="CurrentEmail" class="form-label">Current Email</label>
								<input type="email" class="form-control" id="CurrentEmail" name="CurrentEmail" required />
							</div>
							<div class="mb-3">
								<label for="NewEmail" class="form-label">New Email</label>
								<input type="email" class="form-control" id="NewEmail" name="NewEmail" required />
							</div>
							<div class="mb-3">
								<label for="ConfirmEmail" class="form-label">Confirm New Email</label>
								<input type="email" class="form-control" id="ConfirmEmail" name="ConfirmEmail" required />
							</div>
							<button type="submit" class="btn btn-primary">Update Email</button>
						</form>
					</div>

					<!-- Password Tab -->
					<div class="tab-pane fade @(TempData["ActiveTab"]?.ToString() == "password" ? "show active" : "")" id="password">
						<h3>Change Password</h3>
						<form method="post" asp-page-handler="ChangePassword" style="max-width: 500px;">
							<div class="mb-3">
								<label for="OldPassword" class="form-label">Old Password</label>
								<div class="input-group">
									<input type="password" class="form-control" id="OldPassword" name="OldPassword" required />
									<button type="button" class="btn btn-outline-secondary" onclick="togglePassword('OldPassword', this)">
										<i class="fa fa-eye"></i>
									</button>
								</div>
							</div>

							<div class="mb-3">
								<label for="NewPassword" class="form-label">New Password</label>
								<div class="input-group">
									<input type="password" class="form-control" id="NewPassword" name="NewPassword" required />
									<button type="button" class="btn btn-outline-secondary" onclick="togglePassword('NewPassword', this)">
										<i class="fa fa-eye"></i>
									</button>
								</div>
							</div>

							<div class="mb-3">
								<label for="ConfirmPassword" class="form-label">Confirm New Password</label>
								<div class="input-group">
									<input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" required />
									<button type="button" class="btn btn-outline-secondary" onclick="togglePassword('ConfirmPassword', this)">
										<i class="fa fa-eye"></i>
									</button>
								</div>
							</div>
							<button type="submit" class="btn btn-primary">Update Password</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>
				document.getElementById('selectAll').addEventListener('change', function () {
					const checkboxes = document.querySelectorAll('.select-app');
					checkboxes.forEach(checkbox => checkbox.checked = this.checked);
				});

					 // Handle "Select All" checkbox functionality for programs
		document.getElementById('selectAllPrograms').addEventListener('change', function () {
			const checkboxes = document.querySelectorAll('.select-program');
			checkboxes.forEach(checkbox => checkbox.checked = this.checked);
		});

				function showRejectReasonModal() {
					const selectedIds = Array.from(document.querySelectorAll('.select-app:checked')).map(cb => cb.value);

					if (selectedIds.length === 0) {
						showNotification('Please select at least one application to reject.', 'danger');
						return;
					}

					document.getElementById('rejectApplicationIds').value = selectedIds.join(',');
					const modal = new bootstrap.Modal(document.getElementById('rejectReasonModal'));
					modal.show();
				}

				function togglePassword(inputId, button) {
					const input = document.getElementById(inputId);
					const icon = button.querySelector("i");
					if (input.type === "password") {
						input.type = "text";
						icon.classList.remove("fa-eye");
						icon.classList.add("fa-eye-slash");
					} else {
						input.type = "password";
						icon.classList.remove("fa-eye-slash");
						icon.classList.add("fa-eye");
					}
				}

				function showNotification(message, type) {
					const notification = document.getElementById('notification');
					const messageSpan = document.getElementById('notificationMessage');

					// Entferne vorherige Klassen und füge neue hinzu
					notification.className = `alert alert-${type}`;
					messageSpan.textContent = message;

					// Zeige die Benachrichtigung
					notification.style.display = 'block';
					setTimeout(() => {
						notification.classList.add('show');
					}, 10);

					// Verstecke die Benachrichtigung nach 5 Sekunden
					setTimeout(() => {
						notification.classList.remove('show');
						setTimeout(() => {
							notification.style.display = 'none';
						}, 300); // Gleiche Zeit wie die CSS-Transition
					}, 3000);
				}

				// Trigger für Erfolg oder Fehler
				window.onload = function () {
					const successMessage = '@TempData["SuccessMessage"]';
					const errorMessage = '@TempData["ErrorMessage"]';

					if (successMessage) {
						showNotification(successMessage, 'success');
					}
					if (errorMessage) {
						showNotification(errorMessage, 'danger');
					}
				};

				function showApplicationDetails(applicationId) {
					fetch(`/OrganizerDashboard?handler=ApplicationDetails&applicationId=${applicationId}`)
						.then(response => response.json())
						.then(data => {
							if (data.success) {
								const application = data.data;

								// Formatierung der Daten
								const applicationDate = new Date(application.applicationDate).toLocaleString('de-DE', {
									day: '2-digit',
									month: '2-digit',
									year: 'numeric',
									hour: '2-digit',
									minute: '2-digit',
								});
								const birthDate = new Date(application.birthDate).toLocaleDateString('de-DE', {
									day: '2-digit',
									month: '2-digit',
									year: 'numeric',
								});

								const content = `
									<div class="card mb-3">
										<div class="card-header bg-primary text-white">
											<h5 class="mb-0">Personal Information</h5>
										</div>
										<div class="card-body">
											<p><strong>First Name:</strong> ${application.firstName}</p>
											<p><strong>Last Name:</strong> ${application.lastName}</p>
											<p><strong>Birth Date:</strong> ${birthDate}</p>
											<p><strong>Gender:</strong> ${application.gender}</p>
											<p><strong>Nationality:</strong> ${application.nationality}</p>
										</div>
									</div>

									<div class="card mb-3">
										<div class="card-header bg-success text-white">
											<h5 class="mb-0">Contact Information</h5>
										</div>
										<div class="card-body">
											<p><strong>Email:</strong> ${application.contactEmail}</p>
											<p><strong>Phone Number:</strong> ${application.phoneNumber}</p>
											<p><strong>Address:</strong> ${application.address}
												${application.houseNumber},
												${application.city},
												${application.country}</p>
										</div>
									</div>

									<div class="card mb-3">
										<div class="card-header bg-info text-white">
											<h5 class="mb-0">Academic Information</h5>
										</div>
										<div class="card-body">
											<p><strong>University Name:</strong> ${application.universityName}</p>
											<p><strong>Degree:</strong> ${application.degree}</p>
											<p><strong>Field of Study:</strong> ${application.studyField}</p>
											<p><strong>Matriculation Number:</strong> ${application.matriculationNumber}</p>
										</div>
									</div>

									<div class="card">
										<div class="card-header bg-secondary text-white">
											<h5 class="mb-0">Application Information</h5>
										</div>
										<div class="card-body">
											<p><strong>Program:</strong> ${application.name}</p>
											<p><strong>Status:</strong> ${application.status}</p>
											<p><strong>Application Date:</strong> ${applicationDate}</p>
										</div>
									</div>
								`;

								document.getElementById('detailsContent').innerHTML = content;

								const modal = new bootstrap.Modal(document.getElementById('detailsModal'));
								modal.show();
							} else {
								alert(data.message);
							}
						})
						.catch(error => {
							console.error('Error fetching application details:', error);
						});
				}

						function sortTable() {
			const table = document.querySelector('.table-container table tbody');
			const rows = Array.from(table.querySelectorAll('tr'));
			const criteria = document.getElementById('sortCriteria').value;

			rows.sort((a, b) => {
				const getValue = (row, column) => row.querySelector(`[data-column="${column}"]`).textContent.trim();

				switch (criteria) {
					case 'name-asc':
						return getValue(a, 'name').localeCompare(getValue(b, 'name'));
					case 'name-desc':
						return getValue(b, 'name').localeCompare(getValue(a, 'name'));
					case 'program-asc':
						return getValue(a, 'program').localeCompare(getValue(b, 'program'));
					case 'program-desc':
						return getValue(b, 'program').localeCompare(getValue(a, 'program'));
					case 'status-asc':
						return getValue(a, 'status').localeCompare(getValue(b, 'status'));
					case 'status-desc':
						return getValue(b, 'status').localeCompare(getValue(a, 'status')) * -1;
					case 'date-asc':
						const dateA = new Date(getValue(a, 'date').split('.').reverse().join('-'));
						const dateB = new Date(getValue(b, 'date').split('.').reverse().join('-'));
						return dateA - dateB;
					case 'date-desc':
						const dateC = new Date(getValue(a, 'date').split('.').reverse().join('-'));
						const dateD = new Date(getValue(b, 'date').split('.').reverse().join('-'));
						return dateD - dateC;
					default:
						return 0;
				}
			});

			// Sortierte Zeilen neu anhängen
			rows.forEach(row => table.appendChild(row));
		}

		function generateReport() {
									const reportType = document.getElementById('reportType').value;

									// Redirect to the report download endpoint
									window.location.href = `/OrganizerDashboard?handler=GenerateReport&reportType=${reportType}`;
								}
	</script>
</body>
</html>
